---
- hosts: all
  become: yes
  vars_files:
  - external_vars.yml
  tasks:
  - name: Create user account and add user to sudo group
    user:
      name: "{{ my_ansible_user }}"
      shell: /bin/bash
      groups: sudo
    register: user_created
  - name: Set authorized key for user ansible by copying it from current user
    ansible.posix.authorized_key:
      user: "{{ my_ansible_user }}"
      state: present
      key: "{{ lookup('file', lookup('env','HOME') + '/.ssh/id_rsa.pub') }}"
  - name: Deactivate root ssh login
    ansible.builtin.lineinfile:
      path: /etc/ssh/sshd_config
      regexp: '^PermitRootLogin'
      line: PermitRootLogin no
    register: sshd
  - name: Restart sshd service after disabling root ssh login
    ansible.builtin.service:
      name: sshd
      state: restarted
    when: sshd.changed
  - name: install packages
    action: > 
      {{ ansible_pkg_mgr }} name=docker,apt-transport-https,ca-certificates,curl,software-properties-common,python3-pip,virtualenv,python3-setuptools state=present update_cache=yes 
  - name: Add Docker GPG apt Key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg
      state: present
  - name: Add Docker Repository
    apt_repository:
      repo: deb https://download.docker.com/linux/ubuntu bionic stable
      state: present
  - name: Update apt and install docker-ce
    apt: update_cache=yes name=docker-ce state=latest
  - name: Install Docker Module for Python
    pip:
      name: docker
  - name: Start docker service
    systemd:
      state: started
      name: docker
  - name: Install microk8s snap
    snap:
      name=microk8s
      classic=yes
      state=present
    register: microk8s
  - name: Append docker and microk8s group to user ansible
    user: name={{ my_ansible_user }}
          groups=docker,microk8s
          append=yes
  - name: Start microk8s services
    ansible.builtin.shell: microk8s enable dashboard dns registry portainer
